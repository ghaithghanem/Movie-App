name: movie_app
description: "A new Flutter project."
publish_to: 'none'

version: 1.0.0+1

environment:
  sdk: '>=3.4.3 <4.0.0'

dependencies:
  # for routing => https://pub.dev/packages/auto_route
  auto_route: ^7.8.3

  # for caching images => https://pub.dev/packages/cached_network_image
  cached_network_image: ^3.3.0

  # for network requests => https://pub.dev/packages/dio
  dio: ^5.3.3

  # for equality => https://pub.dev/packages/equatable
  equatable: ^2.0.5

  # for theme => https://pub.dev/packages/flex_color_scheme
  flex_color_scheme: ^7.3.1
  flutter:
    sdk: flutter
  # for state management => https://pub.dev/packages/flutter_bloc
  flutter_bloc: ^8.1.3

  # for environments => https://pub.dev/packages/flutter_dotenv
  flutter_dotenv: ^5.1.0

  flutter_native_splash: ^2.4.0
  # for generating assets code => https://pub.dev/packages/flutter_gen
  flutter_gen: ^5.4.0

  # for useful hooks => https://pub.dev/packages/flutter_hooks
  flutter_hooks: ^0.20.3

  # for responsibility => https://pub.dev/packages/flutter_screenutil
  flutter_screenutil: ^5.9.0

  # for svg => https://pub.dev/packages/flutter_svg
  flutter_svg: ^2.0.9

  # for functional programming => https://pub.dev/packages/fpdart
  fpdart: ^1.1.0

  # for dependency injection => https://pub.dev/packages/get_it
  get_it: ^7.6.4

  # for theme or locale management => https://pub.dev/packages/hydrated_bloc
  hydrated_bloc: ^9.1.2

  intl: ^0.19.0

  # for local data source
  isar: ^3.1.0+1
  isar_flutter_libs: ^3.1.0+1


  hive_flutter: ^1.1.0
  # for creating api models => https://pub.dev/packages/json_annotation
  json_annotation: ^4.8.1

  # for app data directories
  path_provider: ^2.1.1

  # a dio interceptor for developer => https://pub.dev/packages/pretty_dio_logger
  pretty_dio_logger: ^1.3.1

  # for shimmer effect => https://pub.dev/packages/shimmer
  shimmer: ^3.0.0
  just_audio: ^0.9.22
  path: ^1.8.3
  ffmpeg_kit_flutter: ^6.0.3
  provider: ^6.0.0
  flutter_keyboard_size: ^1.0.0+3
  image_picker: ^1.0.5
  voice_message_package: ^2.2.1
  audio_waveforms: ^1.0.5
  flutter_sound: ^9.6.0
  permission_handler: ^11.3.1
  pull_to_refresh_flutter3: ^2.0.2
  liquid_pull_to_refresh: ^3.0.1
  filter_list: ^1.0.3
  socket_io_client: ^2.0.0
  flutter_chat_bubble: ^2.0.2
  tuple: ^2.0.0
  flutter_slidable: ^3.1.1
  emoji_picker_flutter: ^3.0.0
  awesome_snackbar_content: ^0.1.3
  # for url launcher => https://pub.dev/packages/url_launcher
  url_launcher: ^6.2.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  firebase_core: ^2.24.2
  firebase_messaging: ^14.7.10

dev_dependencies:
  # auto_route generator => https://pub.dev/packages/auto_route_generator
  auto_route_generator: ^7.3.1

  # for testing bloc => https://pub.dev/packages/bloc_test
  bloc_test: ^9.1.4

  build_runner: ^2.4.6
  flutter_gen_runner: ^5.4.0
  flutter_lints: ^4.0.0
  flutter_test:
    sdk: flutter
  # for local data source
  isar_generator: ^3.1.0+1

  # for creating api models => https://pub.dev/packages/json_serializable
  json_serializable: ^6.7.1

  # for testing => https://pub.dev/packages/mockito
  mockito: ^5.4.4

flutter:
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - .env

  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: OpenSans
      fonts:
        - asset: assets/fonts/OpenSans_Light.ttf
          weight: 300
        - asset: assets/fonts/OpenSans_Regular.ttf
          weight: 400
        - asset: assets/fonts/OpenSans_Medium.ttf
          weight: 500
        - asset: assets/fonts/OpenSans_Bold.ttf
          weight: 700
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700

# No need to duplicate flutter_lints entry here.

# Add any additional configuration below.

flutter_native_splash:

  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # dart run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # dart run flutter_native_splash:remove

  # IMPORTANT NOTE: These parameter do not affect the configuration of Android 12 and later, which
  # handle splash screens differently that prior versions of Android.  Android 12 and later must be
  # configured specifically in the android_12 section below.

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#e1f5fe"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/images/logo_movie_edit12.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  image_dark: assets/images/logo_movie_edit12.png
  #branding_dark: assets/dart_dark.png

  # Android 12: handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
